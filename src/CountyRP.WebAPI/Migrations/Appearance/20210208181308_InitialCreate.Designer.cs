// <auto-generated />
using CountyRP.WebAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CountyRP.WebAPI.Migrations.Appearance
{
    [DbContext(typeof(AppearanceContext))]
    [Migration("20210208181308_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CountyRP.DAO.Appearance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BlendShape")
                        .HasColumnType("real");

                    b.Property<float>("BlendSkin")
                        .HasColumnType("real");

                    b.Property<float>("BrowHeight")
                        .HasColumnType("real");

                    b.Property<float>("BrowWidth")
                        .HasColumnType("real");

                    b.Property<float>("CBoneHeight")
                        .HasColumnType("real");

                    b.Property<float>("CBoneWidth")
                        .HasColumnType("real");

                    b.Property<float>("CheekWidth")
                        .HasColumnType("real");

                    b.Property<float>("ChinLength")
                        .HasColumnType("real");

                    b.Property<float>("ChinPos")
                        .HasColumnType("real");

                    b.Property<float>("ChinShape")
                        .HasColumnType("real");

                    b.Property<float>("ChinWidth")
                        .HasColumnType("real");

                    b.Property<int>("EyeColor")
                        .HasColumnType("int");

                    b.Property<float>("Eyes")
                        .HasColumnType("real");

                    b.Property<int>("FatherBlend")
                        .HasColumnType("int");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("HairColor")
                        .HasColumnType("int");

                    b.Property<int>("HairHighlight")
                        .HasColumnType("int");

                    b.Property<float>("JawHeight")
                        .HasColumnType("real");

                    b.Property<float>("JawWidth")
                        .HasColumnType("real");

                    b.Property<float>("Lips")
                        .HasColumnType("real");

                    b.Property<int>("MotherBlend")
                        .HasColumnType("int");

                    b.Property<float>("NeckWidth")
                        .HasColumnType("real");

                    b.Property<float>("NoseBridge")
                        .HasColumnType("real");

                    b.Property<float>("NoseBridgeShift")
                        .HasColumnType("real");

                    b.Property<float>("NoseHeight")
                        .HasColumnType("real");

                    b.Property<float>("NoseTip")
                        .HasColumnType("real");

                    b.Property<float>("NoseWidth")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Appearances");
                });
#pragma warning restore 612, 618
        }
    }
}
